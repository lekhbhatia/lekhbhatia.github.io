[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Thoughts From A Lake",
    "section": "",
    "text": "I am currently a mathematics honors student at the MSI, working with Ben Andrews and Mat Langford. I study curve shortening flow with boundary conditions. However, I am broadly interested in analysis, due to some great lecturers (Pierre Portal, Po Lam Yung, Andrew Hassell). I will soon be working for an options market maker as a trader. This website has stuff I do."
  },
  {
    "objectID": "blog/index.html",
    "href": "blog/index.html",
    "title": "Useful (?) Ramblings",
    "section": "",
    "text": "Date\n\n\n\nTitle\n\n\n\n\n\n\n\n\nSep 15, 2025\n\n\nWhy I Love Integration by Parts\n\n\n\n\n\n\nAug 28, 2025\n\n\nThe Case for Inkscape\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/posts/inkscapelove/index.html",
    "href": "blog/posts/inkscapelove/index.html",
    "title": "The Case for Inkscape",
    "section": "",
    "text": "In writing my honors thesis, and some other writing, I found that creating images was a relatively difficult process, especially if I wished for these images to be “to scale” in the mathematical sense. Of course, I could learn TikZ and I’m sure there exist packages for my use case. However, it happened to be that given the time constraints of my life, the learning curves associated to TikZ were something to be avoided. I was looking for a open source editor which I could get up and running quickly, and was compatible with my Overleaf/Github workflow.\nAs it turned out, the final answer to my problem was provided to me by a blog post by Gilles Castel. It will be immediately clear in this blog post that Inkscape is undeniably a top tier editor for these purposes. Features include, non-exhaustively:\n\nLaTeX text, in many formats. There are two ways to directly add text to your documents described in this stack exchange post. PDFLaTeX does not have easy support for customisable preambles, but TeX-Text does which I have linked to be the same preamble as my thesis (I warn that TeX-Text happens to be quite buggy, I am running on Ubuntu 22.04.5 LTS). In Castel’s blog post he discusses another method of adding text which retains text as a text object for your LaTeX editor to continue to change even after importing the “image”.\nParametric curves, via the inbuilt render –&gt; parametric curves extension. There are some small issues with asymptotic curves, but these issues can be remedied by some intelligent selection of parameters.\nEasy “blob” creation, due to a rich object/path/node editing system.\nAccurate transformations. I can scale, rotate, shear, translate all objects together or individually by precise numerical amounts which I specify. In fact, there is support for matrix transformations as well.\nEasy snapping. I can specify which aspects of my objects I wish to be snapping, which is a surprisingly useful feature missing from most other editors.\n\nTutorials can be found thanks to Elisa de Castro Guerra and others at this site. The skills are easy to pick up. Myself and other students in my honors cohort were able to create usable images pretty much as soon as we had the editor installed. Here are some images I drew up in less than 5 minutes each.\n\n  \n\nHere is a short list of (free) editors I tried which didn’t make the cut, and why. Perhaps you don’t have to go through the process of trying these if you read this.\n\nMicrosoft Whiteboard, RNote, MathCha – missing many key features.\nDesmos, Geogebra – where Desmos shines in usability, it lacks in serious geometric constructions, and where Geogebra shines in the latter, it truly fails at the former."
  },
  {
    "objectID": "blog/posts/ibplove/index.html",
    "href": "blog/posts/ibplove/index.html",
    "title": "Why I Love Integration by Parts",
    "section": "",
    "text": "Analysis is a vast field, and there is a great deal I can say about why I find it beautiful. However, a common adage conveys the beauty quite concisely: analysis is not about objects, it is about actions. The subjects of interest are not all-encompassing theorems about the macroscopic structure of the field, but rather the usage of ingenious tools to analyze a class of objects. I can find countless examples in harmonic, functional, stochastic, geometric, or microlocal analysis.\nIntegration by parts (IBP) is one such ingenious tool which most students will learn in high school, and yet it evades the interest of most undergraduate mathematics students. In this article I will hopefully convince you that it should be of great interest. I love it, and you should too. I break apart this discussion broadly into two focuses: practice and theory."
  },
  {
    "objectID": "blog/posts/ibplove/index.html#footnotes",
    "href": "blog/posts/ibplove/index.html#footnotes",
    "title": "Why I Love Integration by Parts",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nI have oft heard the argument that since it is easy to derive via other seemingly more “elementary” or “foundational” results, that IBP certainly shouldn’t be of much interest in and of itself. I find that this sort of thinking is antithetical to the pursuit of research in analysis. It is often the case that very simple methods are quite difficult to come by, and can go a very long way. It is with the presentation of IBP as a method in and of itself that we have made so much progress using it. To beat an analogy to death, I think this is because mathematics is very much an art form. You can claim that some methods are easy, but there is much credit to be given to those who tried to experiment with the simplest things.↩︎\nWe can also consider \\(\\mathbb R^n\\) instead of \\(\\mathbb R\\). In fact, it would not be difficult to write down some equivalent statement of integration by parts over an arbitrary manifold, but we will leave this discussion to this blog post.↩︎"
  }
]